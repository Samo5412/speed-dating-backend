# @name Users API Endpoints

# Make sure rest-client.rememberCookiesForSubsequentRequests is set to false in VS Code 
# settings to properly test unauthorized requests

@baseUrl = http://localhost:3000/api/v1

### Register a new user
// Expected HTTP response status code: 201
// Expected response: a string stating that user was created.
# @name registerUser
POST {{baseUrl}}/users/register HTTP/1.1
Content-Type: application/json

{
    "fullName": "Daniel JÃ¶nsson",
    "email": "john_doe@email.com",
    "password": "password123"
}

### Try get all users when not authenticated
// Expected HTTP response status code: 401
// Expected response: Unauthorized
GET {{baseUrl}}/users

### Login a user
// Expected HTTP response status code: 200
// Expected response: a user object representing the logged in user (json)
# @name loginUser
POST {{baseUrl}}/users/login HTTP/1.1
Content-Type: application/json

{
    "email": "john_doe@email.com",
    "password": "password123"
}

###

@userId = {{registerUser.response.body.userId}}
@userEmail = {{registerUser.response.body.email}}
@authCookie = {{loginUser.response.headers.set-cookie}}

### Get all users
// Expected HTTP response status code: 200
GET {{baseUrl}}/users
Cookie: {{authCookie}}

### Get user by ID
// Expected HTTP response status code: 200
GET {{baseUrl}}/users/{{userId}}
Cookie: {{authCookie}}

### Update the created user by email
// Expected HTTP response status code: 200
# @name updateUserByEmail
PUT {{baseUrl}}/users/email/{{userEmail}}
Content-Type: application/json
Cookie: {{authCookie}}

{
    "email": "updatedUsingEmail@example.com"
}

### Update the created user by id
// Expected HTTP response status code: 200
# @name updateUserById
PUT {{baseUrl}}/users/{{userId}}
Content-Type: application/json
Cookie: {{authCookie}}

{
    "email": "updatedUsingId@example.com"
}

### Get specific user by ID
// Test: Get specific user
// Expected HTTP response status code: 200
// Expected response: a user object (json)
GET {{baseUrl}}/users/{{userId}}
Cookie: {{authCookie}}

### Get all users
// Test: Get all users
// Expected HTTP response status code: 200
// Expected response: an array (json) with all users
GET {{baseUrl}}/users
Cookie: {{authCookie}}

###############################################
// Shared Contact Endpoints
###############################################

### Create a new user to add as shared contact
// Expected HTTP response status code: 201
// Expected response: a user object (json)
# @name registerSharedContactUser
POST {{baseUrl}}/users/register
Content-Type: application/json

{
    "fullName": "King Tubby",
    "email": "sharedContact@example.com",
    "password": "password123",
    "role": "participant"
}

###

@sharedContactId = {{registerSharedContactUser.response.body.userId}}

### Add a shared contact
// Expected HTTP response status code: 201
// Expected response: created shared contact object
# @name addSharedContact
POST {{baseUrl}}/users/{{userId}}/shared-contacts
Content-Type: application/json
Cookie: {{authCookie}}

{
    "contactId": "{{sharedContactId}}"
}

###

@addedContactId = {{addSharedContact.response.body.contact}}

### Create a third user to add as another shared contact
// Expected HTTP response status code: 201
// Expected response: a user object (json)
# @name registerSecondSharedContactUser
POST {{baseUrl}}/users/register
Content-Type: application/json

{
    "fullName": "Michael Prophet",
    "email": "sharedContact2@example.com",
    "password": "password123",
    "role": "participant"
}

###

@secondSharedContactId = {{registerSecondSharedContactUser.response.body.userId}}

### Add the second shared contact
// Expected HTTP response status code: 201
// Expected response: created shared contact object
# @name addSecondSharedContact
POST {{baseUrl}}/users/{{userId}}/shared-contacts
Content-Type: application/json
Cookie: {{authCookie}}

{
    "contactId": "{{secondSharedContactId}}"
}

### Get all shared contacts for a user
// Expected HTTP response status code: 200
// Expected response: array of shared contacts
GET {{baseUrl}}/users/{{userId}}/shared-contacts
Cookie: {{authCookie}}

### Get a specific shared contact
// Expected HTTP response status code: 200
// Expected response: shared contact object
GET {{baseUrl}}/users/{{userId}}/shared-contacts/{{sharedContactId}}
Cookie: {{authCookie}}

### Update a shared contact
// Expected HTTP response status code: 200
// Expected response: updated shared contact object
PUT {{baseUrl}}/users/{{userId}}/shared-contacts/{{sharedContactId}}
Content-Type: application/json
Cookie: {{authCookie}}

{
    "status": "accepted"
}

### Remove a shared contact
// Expected HTTP response status code: 200
DELETE {{baseUrl}}/users/{{userId}}/shared-contacts/{{sharedContactId}}
Cookie: {{authCookie}}

### Remove a not existing shared contact
// Expected HTTP response status code: 404
DELETE {{baseUrl}}/users/{{userId}}/shared-contacts/67b0a9bec6f8a15f513ed713
Cookie: {{authCookie}}

###############################################
// Notification Endpoints
###############################################

### Create a notification for user
// Expected HTTP response status code: 201
// Expected response: created notification object
# @name createNotification
POST {{baseUrl}}/users/{{userId}}/notifications
Content-Type: application/json
Cookie: {{authCookie}}

{
    "message": "You have a new match with Bruce Lee!"
}

###

@notificationId = {{createNotification.response.body._id}}

### Get user notifications
// Expected HTTP response status code: 200
// Expected response: array of notifications
GET {{baseUrl}}/users/{{userId}}/notifications
Cookie: {{authCookie}}

### Mark notification as read
// Expected HTTP response status code: 200
// Expected response: updated notification object
PUT {{baseUrl}}/users/{{userId}}/notifications/{{notificationId}}/read
Cookie: {{authCookie}}

### Delete notification
// Expected HTTP response status code: 200
// Expected response: Notification deleted
DELETE {{baseUrl}}/users/{{userId}}/notifications/{{notificationId}}
Cookie: {{authCookie}}

###############################################
// Clean up
###############################################

### Delete the user
// Expected HTTP response status code: 200
DELETE {{baseUrl}}/users/{{userId}}
Cookie: {{authCookie}}

### Delete the shared contact user
// Expected HTTP response status code: 200
DELETE {{baseUrl}}/users/{{sharedContactId}}
Cookie: {{authCookie}}

### Delete the second shared contact user
// Expected HTTP response status code: 200
DELETE {{baseUrl}}/users/{{secondSharedContactId}}
Cookie: {{authCookie}}
